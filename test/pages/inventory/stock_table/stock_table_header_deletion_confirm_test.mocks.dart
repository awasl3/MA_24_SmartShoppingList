// Mocks generated by Mockito 5.4.4 from annotations
// in smart_shopping_list/test/pages/inventory/stock_table/stock_table_header_deletion_confirm_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smart_shopping_list/pages/inventory/stock/article.dart' as _i4;
import 'package:smart_shopping_list/util/database/article_database/article_databse.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ArticleDatabse].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleDatabse extends _i1.Mock implements _i2.ArticleDatabse {
  MockArticleDatabse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> insertArticle(_i4.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #insertArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Article>> getAllArticles() => (super.noSuchMethod(
        Invocation.method(
          #getAllArticles,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Article>>.value(<_i4.Article>[]),
      ) as _i3.Future<List<_i4.Article>>);

  @override
  _i3.Future<void> updateArticle(_i4.Article? article) => (super.noSuchMethod(
        Invocation.method(
          #updateArticle,
          [article],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteArticle(String? name) => (super.noSuchMethod(
        Invocation.method(
          #deleteArticle,
          [name],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.Article?> getArticle(String? name) => (super.noSuchMethod(
        Invocation.method(
          #getArticle,
          [name],
        ),
        returnValue: _i3.Future<_i4.Article?>.value(),
      ) as _i3.Future<_i4.Article?>);
}
